@page "/DetalheReceita/{Id}"
@inject HttpClient http
@using Projeto_CodeDeveloper_24.Models
@rendermode InteractiveServer
@inject NavigationManager navigationManager

<h3 >Detalhe</h3>

@if (IsLoading)
{
    <div class="spinner"></div>
}
else
{
    <div class="card">
    <div class="row">
        <div class="col">
                <img src="https://www.pingodoce.pt/wp-content/uploads/2023/04/como-confecionar-peixe.jpg"
                     class="card-img-top"
                     style="height:200px"
                     alt="receita" />
        </div>
            <div class="col">
                <img src="https://www.pingodoce.pt/wp-content/uploads/2023/04/como-confecionar-peixe.jpg"
                     class="card-img-top"
                     style="height:200px"
                     alt="receita" />
            </div>
        
    </div>
    <div class="row">
        <div class="col-md-6">
           
            <div class="card-body">
                <p class="card-text">@categoria.Name</p>
                <p class="card-text">@receita.Titulo</p>
                <label>Ingredientes:</label>
                @foreach (var item in ings)
                {
                    <p class="card-text">@item.IngredienteName  <label class="card-text">@item.Quantidade</label> <label class="card-text">@item.Unidade</label></p>


                }
            </div>
        </div>
        <div class="col-md-6">
            <label>Descrição:</label>
            <p class="card-text">@((MarkupString)receita.Descricao)</p>
            <div class="row">
                <div class="col-md-4 dificuldade">
                        <label>Dificuldade:</label>
                        <p class="card-text">@receita.Dificuldade</p>
                </div>
                    <div class="col-md-4 duracao">
                        <label>Duração:</label>
                        <p class="card-text">@receita.Duracao <label>m</label></p>

                    </div>
            </div>


                <button type="button" class="button btn btn-outline-danger" @onclick="()=>IrPara(destination)">
                    
                Editar
            </button>
            <!-- o onClick tem uma string vazia porque vai para o Home  -->
                <button type="button" class="button btn btn-outline-warning" @onclick="()=>IrPara(string.Empty)">
                Home
            </button>

        </div>
    </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private Receitas receita { get; set; }
    private List<InternalIngredientes> ingredientes { get; set; }
    private Ingredientes ing { get; set; }
    private List<InternalIngredientes> ings { get; set; }
    private Categorias categoria { get; set; }

    private bool IsLoading = true;

    public string destination { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ings = new List<InternalIngredientes>();
        IsLoading = true;
        receita = await http.GetFromJsonAsync<Receitas>($"https://localhost:7179/api/Receitas/{Id}");
        categoria = await http.GetFromJsonAsync<Categorias>($"https://localhost:7179/api/Categorias/{receita.CategoriasId}");

        destination = $"EditarReceita/{Id}";

        foreach (var ingrediente in receita.ReceitaIngredientes)
        {
            ing = await http.GetFromJsonAsync<Ingredientes>($"https://localhost:7179/api/Ingredientes/{ingrediente.IngredientesId}");

            var novoIngrediente = new InternalIngredientes()
                {
                    Unidade = ingrediente.Unidades,
                    Quantidade = ingrediente.Quantidade,
                    IngredienteName = ing.IngredienteName
                };

            ings.Add(novoIngrediente);
        }

        IsLoading = false;
    }

    public class InternalIngredientes
    {
        public string IngredienteName { get; set; }
        public double? Quantidade { get; set; }
        public string Unidade { get; set; }
    }

    private void IrPara(string destino)
    {
        navigationManager.NavigateTo(destino);
    }


}
